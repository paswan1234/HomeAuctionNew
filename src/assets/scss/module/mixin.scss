// import "../modules/variables.scss";

@mixin font-family {
  font-family: 'Barlow', sans-serif !important;
}

@mixin Roboto {
  font-family: 'Roboto', sans-serif;
}

@mixin Montserrat {
  font-family: 'Montserrat', sans-serif;
}

// A map of breakpoints.
$breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px,
);

@mixin mq($mq-breakpoint, $mq-breakpoints: $breakpoints) {
  @if map-has-key($mq-breakpoints, $mq-breakpoint) {
    $mq-breakpoint: map-get($mq-breakpoints, $mq-breakpoint);
  }
  @media screen and (max-width: #{$mq-breakpoint}) {
    @content;
  }
}

@mixin mqm($mq-breakpoint, $mq-breakpoints: $breakpoints) {
  @if map-has-key($mq-breakpoints, $mq-breakpoint) {
    $mq-breakpoint: map-get($mq-breakpoints, $mq-breakpoint);
  }
  @media screen and (min-width: #{$mq-breakpoint}) {
    @content;
  }
}

@mixin mqmm($mq-breakpoint, $mq-breakpoints: $breakpoints) {
  @if map-has-key($mq-breakpoints, $mq-breakpoint) {
    $mq-breakpoint: map-get($mq-breakpoints, $mq-breakpoint);
  }
  @media (min-width: #{$mq-breakpoint}) and (max-width: #{$mq-breakpoint}) {
    @content;
  }
}

// Border
@mixin border {
  border: 1px solid $lightBorder;
}

@mixin borderGrayBottom {
  border-bottom: 1px solid $lightGrayborder;
}

// Buttons

@mixin button-variant($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;

  &:focus,
  &:not(:disabled):not(.disabled):active,
  &.focus {
    color: $color;
    background-color: darken($background, 10%);
    border-color: darken($border, 25%);
    box-shadow: none !important;
  }

  &:hover {
    color: $color;
    background-color: darken($background, 10%);
    border-color: darken($border, 12%);
  }

  &:active,
  &.active,
  .show > &.dropdown-toggle {
    color: $color;
    background-color: darken($background, 10%);
    background-image: none;
    border-color: darken($border, 12%);

    &:hover,
    &:focus,
    &.focus {
      color: $color;
      background-color: darken($background, 17%);
      border-color: darken($border, 25%);
    }
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &:hover,
    &:focus,
    &.focus,
    &:disabled {
      // background-color: darken($background, 35%);
      // border-color: darken($border, 35%);
      cursor: not-allowed;
      opacity: 0.5;
      pointer-events: none;
    }
  }
}
@mixin borderBtn {
  font-size: small;
  padding: 2px 10px;
  min-height: 25px;
  border: solid 1px;
  min-width: 65px;
  align-items: center;
  line-height: 14px;
  display: flex;
  justify-content: center;
}
//Statistics Card
@mixin smallCardBox {
  box-shadow: 0px 4px 20px rgba(0, 0, 0, 0.04);
  background-color: $white;
  width: 9.25rem;
  margin-right: 1.25rem;
  padding: 1.25rem 1.5rem;
}
